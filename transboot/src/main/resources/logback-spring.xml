<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="10 seconds">
	<include resource="org/springframework/boot/logging/logback/base.xml" />
	
	<!-- 控制台日志配置 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder 
			by default -->
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--日志名称，如果没有File 属性，那么只会使用FileNamePattern的文件路径规则
	        如果同时有<File>和<FileNamePattern>，那么当天日志是<File>，明天会自动把今天
	        的日志改名为今天的日期。即，<File> 的日志都是当天的。
	    -->
	    <File>${logging.dir}/info.${logback.appname}.log</File>
		<!--如果只是想要 Info 级别的日志，只是过滤 info 还是会输出 Error 日志，因为 Error 的级别高，
		    所以我们使用下面的策略，可以避免输出 Error 的日志-->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
		     <level>INFO</level>
		     <!--匹配到就禁止-->
		     <!-- <onMatch>DENY</onMatch> -->
		     <!--没有匹配到就允许-->
		     <!-- <onMismatch>ACCEPTD</onMismatch> -->
		</filter>
		<!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
	    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	        <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
	        <FileNamePattern>${logging.dir}/info.${logback.appname}.%d{yyyy-MM-dd}.log</FileNamePattern>
	        <!--只保留最近90天的日志-->
	        <maxHistory>90</maxHistory>
	        <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
	        <!--<totalSizeCap>1GB</totalSizeCap>-->
	    </rollingPolicy>
		<!--日志输出编码格式化-->
	    <encoder>
	        <charset>UTF-8</charset>
	        <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
	    </encoder>
	</appender>

	<appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
			<!--匹配到就禁止-->
		    <!-- <onMatch>DENY</onMatch> -->
		    <!--没有匹配到就允许-->
		    <!-- <onMismatch>ACCEPT</onMismatch> -->
		</filter>
		<File>${logging.dir}/err.${logback.appname}.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	        <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
	        <FileNamePattern>${logging.dir}/err.${logback.appname}.%d{yyyy-MM-dd}.log</FileNamePattern>
	        <!--只保留最近90天的日志-->
	        <maxHistory>90</maxHistory>
	        <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
	        <!--<totalSizeCap>1GB</totalSizeCap>-->
	    </rollingPolicy>
		<!--日志输出编码格式化-->
	    <encoder>
	        <charset>UTF-8</charset>
	        <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
	    </encoder>
	</appender>
	
	<!-- 配置某个包或是某个具体类的日志打印 -->
    <logger name="com.data.trans.mapper" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
    </logger>
	<!-- hibernate日志输入 -->
	<!-- <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" 
		/> <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="TRACE" 
		/> <logger name="org.hibernate.SQL" level="INFO" /> <logger name="org.hibernate.engine.QueryParameters" 
		level="INFO" /> <logger name="org.hibernate.engine.query.HQLQueryPlan" level="INFO" 
		/> -->

	<root level="INFO">
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="INFO_FILE" />
		<appender-ref ref="ERROR_FILE" />
	</root>

</configuration>
